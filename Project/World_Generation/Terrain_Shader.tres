[gd_resource type="VisualShader" load_steps=20 format=3 uid="uid://b7gjudd3nwgnl"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_yywty"]
parameter_name = "Albedo"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_vwp15"]
source = 5

[sub_resource type="VisualShaderNodeVec3Constant" id="VisualShaderNodeVec3Constant_jresa"]
constant = Vector3(0, 1, 0)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_xk8y4"]
input_name = "normal"

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_nrrwt"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_dbo1l"]
parameter_name = "Cliff_angle"
hint = 1

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_hu7fx"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_yxirl"]
constant = Color(0.384648, 0.271534, 0.112239, 1)

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_2bh0b"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_rg5dn"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_cujxn"]
size = Vector2(910.176, 272.452)
expression = "vec2 e = vec2(.1,0.0);	
NORMAL = normalize(vec3(texture(heightmap,UV-e).y * t_height - texture(heightmap,UV+e).y * t_height, 1.0 * e.x, texture(heightmap,UV - e.yx).y * t_height - texture(heightmap,UV + e.yx).y * t_height));
	"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_rijv1"]
size = Vector2(869.3, 301.8)
expression = "vec3 ddxp = dFdx(v);
vec3 ddyp = dFdy(v);
vec3 cr = cross(ddxp,ddyp);
NORMAL = normalize(cr);"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_dcbnr"]
parameter_name = "t_height"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_1muh0"]
parameter_name = "heightmap"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_cwvom"]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_lmr8e"]
source = 5

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ebphs"]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_4rk7k"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_lchwe"]
input_name = "vertex"

[resource]
code = "shader_type spatial;
render_mode diffuse_lambert_wrap;

uniform sampler2D heightmap;
uniform float t_height;
uniform float Cliff_angle : hint_range(0, 1);
uniform sampler2D Albedo;



void vertex() {
// Input:9
	vec3 n_out9p0 = VERTEX;


// VectorDecompose:10
	float n_out10p0 = n_out9p0.x;
	float n_out10p1 = n_out9p0.y;
	float n_out10p2 = n_out9p0.z;


// Input:5
	vec2 n_out5p0 = UV;


	vec4 n_out6p0;
// Texture2D:6
	n_out6p0 = texture(heightmap, n_out5p0);


// FloatParameter:2
	float n_out2p0 = t_height;


// FloatOp:7
	float n_out7p0 = n_out6p0.x * n_out2p0;


// FloatOp:11
	float n_out11p0 = n_out7p0 + n_out10p1;


// VectorCompose:8
	vec3 n_out8p0 = vec3(n_out10p0, n_out11p0, n_out10p2);


	vec3 n_out14p0;
// Expression:14
	n_out14p0 = vec3(0.0, 0.0, 0.0);
	{
		vec3 ddxp = dFdx(n_out8p0);
		vec3 ddyp = dFdy(n_out8p0);
		vec3 cr = cross(ddxp,ddyp);
		n_out14p0 = normalize(cr);
	}


// Output:0
	VERTEX = n_out8p0;
	NORMAL = n_out14p0;


}

void fragment() {
// Input:5
	vec3 n_out5p0 = NORMAL;


// Vector3Constant:4
	vec3 n_out4p0 = vec3(0.000000, 1.000000, 0.000000);


// DotProduct:6
	float n_out6p0 = dot(n_out5p0, n_out4p0);


// FloatParameter:7
	float n_out7p0 = Cliff_angle;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Albedo, UV);


// ColorConstant:9
	vec4 n_out9p0 = vec4(0.384648, 0.271534, 0.112239, 1.000000);


	vec3 n_out8p0;
// If:8
	float n_in8p2 = 0.00001;
	if(abs(n_out6p0 - n_out7p0) < n_in8p2)
	{
		n_out8p0 = vec3(n_out3p0.xyz);
	}
	else if(n_out6p0 < n_out7p0)
	{
		n_out8p0 = vec3(n_out9p0.xyz);
	}
	else
	{
		n_out8p0 = vec3(n_out3p0.xyz);
	}


// Output:0
	ALBEDO = n_out8p0;


}
"
graph_offset = Vector2(675.872, 136.356)
modes/diffuse = 1
nodes/vertex/0/position = Vector2(1980, 160)
nodes/vertex/2/node = SubResource("VisualShaderNodeFloatParameter_dcbnr")
nodes/vertex/2/position = Vector2(-691.055, 102.737)
nodes/vertex/4/node = SubResource("VisualShaderNodeTexture2DParameter_1muh0")
nodes/vertex/4/position = Vector2(-691.055, -177.263)
nodes/vertex/5/node = SubResource("VisualShaderNodeInput_cwvom")
nodes/vertex/5/position = Vector2(-680, -240)
nodes/vertex/6/node = SubResource("VisualShaderNodeTexture_lmr8e")
nodes/vertex/6/position = Vector2(-320, -140)
nodes/vertex/7/node = SubResource("VisualShaderNodeFloatOp_ebphs")
nodes/vertex/7/position = Vector2(-80, 40)
nodes/vertex/8/node = SubResource("VisualShaderNodeVectorCompose_4rk7k")
nodes/vertex/8/position = Vector2(600, 120)
nodes/vertex/9/node = SubResource("VisualShaderNodeInput_lchwe")
nodes/vertex/9/position = Vector2(-260, 180)
nodes/vertex/10/node = SubResource("VisualShaderNodeVectorDecompose_2bh0b")
nodes/vertex/10/position = Vector2(64.3193, 277.629)
nodes/vertex/11/node = SubResource("VisualShaderNodeFloatOp_rg5dn")
nodes/vertex/11/position = Vector2(255.97, 177.777)
nodes/vertex/13/node = SubResource("VisualShaderNodeExpression_cujxn")
nodes/vertex/13/position = Vector2(960, 620)
nodes/vertex/13/size = Vector2(910.176, 272.452)
nodes/vertex/13/input_ports = "0,4,vertex;"
nodes/vertex/13/output_ports = "0,4,NORMAL;"
nodes/vertex/13/expression = "vec2 e = vec2(.1,0.0);	
NORMAL = normalize(vec3(texture(heightmap,UV-e).y * t_height - texture(heightmap,UV+e).y * t_height, 1.0 * e.x, texture(heightmap,UV - e.yx).y * t_height - texture(heightmap,UV + e.yx).y * t_height));
	"
nodes/vertex/14/node = SubResource("VisualShaderNodeExpression_rijv1")
nodes/vertex/14/position = Vector2(980, 260)
nodes/vertex/14/size = Vector2(869.3, 301.8)
nodes/vertex/14/input_ports = "0,4,v;"
nodes/vertex/14/output_ports = "0,4,NORMAL;"
nodes/vertex/14/expression = "vec3 ddxp = dFdx(v);
vec3 ddyp = dFdy(v);
vec3 cr = cross(ddxp,ddyp);
NORMAL = normalize(cr);"
nodes/vertex/connections = PackedInt32Array(4, 0, 6, 2, 2, 0, 7, 1, 6, 0, 7, 0, 10, 0, 8, 0, 10, 2, 8, 2, 7, 0, 11, 0, 10, 1, 11, 1, 11, 0, 8, 1, 8, 0, 0, 0, 9, 0, 10, 0, 5, 0, 6, 0, 8, 0, 14, 0, 14, 0, 0, 1)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_yywty")
nodes/fragment/2/position = Vector2(-760, 20)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_vwp15")
nodes/fragment/3/position = Vector2(-400, 100)
nodes/fragment/4/node = SubResource("VisualShaderNodeVec3Constant_jresa")
nodes/fragment/4/position = Vector2(-840, 580)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_xk8y4")
nodes/fragment/5/position = Vector2(-820, 520)
nodes/fragment/6/node = SubResource("VisualShaderNodeDotProduct_nrrwt")
nodes/fragment/6/position = Vector2(-360, 460)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatParameter_dbo1l")
nodes/fragment/7/position = Vector2(-500, 640)
nodes/fragment/8/node = SubResource("VisualShaderNodeIf_hu7fx")
nodes/fragment/8/position = Vector2(20, 260)
nodes/fragment/9/node = SubResource("VisualShaderNodeColorConstant_yxirl")
nodes/fragment/9/position = Vector2(-360, 320)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 4, 0, 6, 1, 6, 0, 8, 0, 7, 0, 8, 1, 3, 0, 8, 3, 3, 0, 8, 4, 9, 0, 8, 5, 5, 0, 6, 0, 8, 0, 0, 0)
